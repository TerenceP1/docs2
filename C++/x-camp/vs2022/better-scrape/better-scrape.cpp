// better-scrape.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <map>
using namespace std;
map<string, string> allMIME;

int main()
{
    std::cout << "Hello World!\n";
    allMIME.insert({ "x-world/x-3dmf", ".3dm" });
    allMIME.insert({ "x-world/x-3dmf", ".3dmf" });
    allMIME.insert({ "application/x-7z-compressed", ".7z" });
    allMIME.insert({ "application/octet-stream", ".a" });
    allMIME.insert({ "application/x-authorware-bin", ".aab" });
    allMIME.insert({ "application/x-authorware-map", ".aam" });
    allMIME.insert({ "application/x-authorware-seg", ".aas" });
    allMIME.insert({ "text/vnd.abc", ".abc" });
    allMIME.insert({ "text/html", ".acgi" });
    allMIME.insert({ "video/animaflex", ".afl" });
    allMIME.insert({ "application/postscript", ".ai" });
    allMIME.insert({ "audio/aiff", ".aif" });
    allMIME.insert({ "audio/x-aiff", ".aif" });
    allMIME.insert({ "audio/aiff", ".aifc" });
    allMIME.insert({ "audio/x-aiff", ".aifc" });
    allMIME.insert({ "audio/aiff", ".aiff" });
    allMIME.insert({ "audio/x-aiff", ".aiff" });
    allMIME.insert({ "application/x-aim", ".aim" });
    allMIME.insert({ "text/x-audiosoft-intra", ".aip" });
    allMIME.insert({ "application/x-navi-animation", ".ani" });
    allMIME.insert({ "application/x-nokia-9000-communicator-add-on-software", ".aos" });
    allMIME.insert({ "application/mime", ".aps" });
    allMIME.insert({ "application/octet-stream", ".arc" });
    allMIME.insert({ "application/arj", ".arj" });
    allMIME.insert({ "application/octet-stream", ".arj" });
    allMIME.insert({ "image/x-jg", ".art" });
    allMIME.insert({ "video/x-ms-asf", ".asf" });
    allMIME.insert({ "text/x-asm", ".asm" });
    allMIME.insert({ "text/asp", ".asp" });
    allMIME.insert({ "application/x-mplayer2", ".asx" });
    allMIME.insert({ "video/x-ms-asf", ".asx" });
    allMIME.insert({ "video/x-ms-asf-plugin", ".asx" });
    allMIME.insert({ "audio/basic", ".au" });
    allMIME.insert({ "audio/x-au", ".au" });
    allMIME.insert({ "application/x-troff-msvideo", ".avi" });
    allMIME.insert({ "video/avi", ".avi" });
    allMIME.insert({ "video/msvideo", ".avi" });
    allMIME.insert({ "video/x-msvideo", ".avi" });
    allMIME.insert({ "video/avs-video", ".avs" });
    allMIME.insert({ "application/x-bcpio", ".bcpio" });
    allMIME.insert({ "application/mac-binary", ".bin" });
    allMIME.insert({ "application/macbinary", ".bin" });
    allMIME.insert({ "application/octet-stream", ".bin" });
    allMIME.insert({ "application/x-binary", ".bin" });
    allMIME.insert({ "application/x-macbinary", ".bin" });
    allMIME.insert({ "image/bmp", ".bm" });
    allMIME.insert({ "image/bmp", ".bmp" });
    allMIME.insert({ "image/x-windows-bmp", ".bmp" });
    allMIME.insert({ "application/book", ".boo" });
    allMIME.insert({ "application/book", ".book" });
    allMIME.insert({ "application/x-bzip2", ".boz" });
    allMIME.insert({ "application/x-bsh", ".bsh" });
    allMIME.insert({ "application/x-bzip", ".bz" });
    allMIME.insert({ "application/x-bzip2", ".bz2" });
    allMIME.insert({ "text/plain", ".c" });
    allMIME.insert({ "text/x-c", ".c" });
    allMIME.insert({ "text/plain", ".c++" });
    allMIME.insert({ "application/vnd.ms-pki.seccat", ".cat" });
    allMIME.insert({ "text/plain", ".cc" });
    allMIME.insert({ "text/x-c", ".cc" });
    allMIME.insert({ "application/clariscad", ".ccad" });
    allMIME.insert({ "application/x-cocoa", ".cco" });
    allMIME.insert({ "application/cdf", ".cdf" });
    allMIME.insert({ "application/x-cdf", ".cdf" });
    allMIME.insert({ "application/x-netcdf", ".cdf" });
    allMIME.insert({ "application/pkix-cert", ".cer" });
    allMIME.insert({ "application/x-x509-ca-cert", ".cer" });
    allMIME.insert({ "application/x-chat", ".cha" });
    allMIME.insert({ "application/x-chat", ".chat" });
    allMIME.insert({ "application/java", ".class" });
    allMIME.insert({ "application/java-byte-code", ".class" });
    allMIME.insert({ "application/x-java-class", ".class" });
    allMIME.insert({ "application/octet-stream", ".com" });
    allMIME.insert({ "text/plain", ".com" });
    allMIME.insert({ "text/plain", ".conf" });
    allMIME.insert({ "application/x-cpio", ".cpio" });
    allMIME.insert({ "text/x-c", ".cpp" });
    allMIME.insert({ "application/mac-compactpro", ".cpt" });
    allMIME.insert({ "application/x-compactpro", ".cpt" });
    allMIME.insert({ "application/x-cpt", ".cpt" });
    allMIME.insert({ "application/pkcs-crl", ".crl" });
    allMIME.insert({ "application/pkix-crl", ".crl" });
    allMIME.insert({ "application/pkix-cert", ".crt" });
    allMIME.insert({ "application/x-x509-ca-cert", ".crt" });
    allMIME.insert({ "application/x-x509-user-cert", ".crt" });
    allMIME.insert({ "application/x-csh", ".csh" });
    allMIME.insert({ "text/x-script.csh", ".csh" });
    allMIME.insert({ "application/x-pointplus", ".css" });
    allMIME.insert({ "text/css", ".css" });
    allMIME.insert({ "text/csv", ".csv" });
    allMIME.insert({ "text/plain", ".cxx" });
    allMIME.insert({ "application/x-director", ".dcr" });
    allMIME.insert({ "application/x-deepv", ".deepv" });
    allMIME.insert({ "text/plain", ".def" });
    allMIME.insert({ "application/x-x509-ca-cert", ".der" });
    allMIME.insert({ "video/x-dv", ".dif" });
    allMIME.insert({ "application/x-director", ".dir" });
    allMIME.insert({ "video/dl", ".dl" });
    allMIME.insert({ "video/x-dl", ".dl" });
    allMIME.insert({ "application/msword", ".doc" });
    allMIME.insert({ "application/vnd.openxmlformats-officedocument.wordprocessingml.document", ".docx" });
    allMIME.insert({ "application/msword", ".dot" });
    allMIME.insert({ "application/commonground", ".dp" });
    allMIME.insert({ "application/drafting", ".drw" });
    allMIME.insert({ "application/octet-stream", ".dump" });
    allMIME.insert({ "video/x-dv", ".dv" });
    allMIME.insert({ "application/x-dvi", ".dvi" });
    allMIME.insert({ "drawing/x-dwf (old)", ".dwf" });
    allMIME.insert({ "model/vnd.dwf", ".dwf" });
    allMIME.insert({ "application/acad", ".dwg" });
    allMIME.insert({ "image/vnd.dwg", ".dwg" });
    allMIME.insert({ "image/x-dwg", ".dwg" });
    allMIME.insert({ "application/dxf", ".dxf" });
    allMIME.insert({ "image/vnd.dwg", ".dxf" });
    allMIME.insert({ "image/x-dwg", ".dxf" });
    allMIME.insert({ "application/x-director", ".dxr" });
    allMIME.insert({ "text/x-script.elisp", ".el" });
    allMIME.insert({ "application/x-bytecode.elisp (compiled elisp)", ".elc" });
    allMIME.insert({ "application/x-elc", ".elc" });
    allMIME.insert({ "application/x-envoy", ".env" });
    allMIME.insert({ "application/vnd.ms-fontobject", ".eot" });
    allMIME.insert({ "application/postscript", ".eps" });
    allMIME.insert({ "application/x-esrehber", ".es" });
    allMIME.insert({ "text/x-setext", ".etx" });
    allMIME.insert({ "application/envoy", ".evy" });
    allMIME.insert({ "application/x-envoy", ".evy" });
    allMIME.insert({ "application/octet-stream", ".exe" });
    allMIME.insert({ "text/plain", ".f" });
    allMIME.insert({ "text/x-fortran", ".f" });
    allMIME.insert({ "text/x-fortran", ".f77" });
    allMIME.insert({ "text/plain", ".f90" });
    allMIME.insert({ "text/x-fortran", ".f90" });
    allMIME.insert({ "application/vnd.fdf", ".fdf" });
    allMIME.insert({ "application/fractals", ".fif" });
    allMIME.insert({ "image/fif", ".fif" });
    allMIME.insert({ "audio/flac", ".flac" });
    allMIME.insert({ "video/fli", ".fli" });
    allMIME.insert({ "video/x-fli", ".fli" });
    allMIME.insert({ "image/florian", ".flo" });
    allMIME.insert({ "text/vnd.fmi.flexstor", ".flx" });
    allMIME.insert({ "video/x-atomic3d-feature", ".fmf" });
    allMIME.insert({ "text/plain", ".for" });
    allMIME.insert({ "text/x-fortran", ".for" });
    allMIME.insert({ "image/vnd.fpx", ".fpx" });
    allMIME.insert({ "image/vnd.net-fpx", ".fpx" });
    allMIME.insert({ "application/freeloader", ".frl" });
    allMIME.insert({ "audio/make", ".funk" });
    allMIME.insert({ "text/plain", ".g" });
    allMIME.insert({ "image/g3fax", ".g3" });
    allMIME.insert({ "image/gif", ".gif" });
    allMIME.insert({ "video/gl", ".gl" });
    allMIME.insert({ "video/x-gl", ".gl" });
    allMIME.insert({ "audio/x-gsm", ".gsd" });
    allMIME.insert({ "audio/x-gsm", ".gsm" });
    allMIME.insert({ "application/x-gsp", ".gsp" });
    allMIME.insert({ "application/x-gss", ".gss" });
    allMIME.insert({ "application/x-gtar", ".gtar" });
    allMIME.insert({ "application/x-compressed", ".gz" });
    allMIME.insert({ "application/x-gzip", ".gz" });
    allMIME.insert({ "application/x-gzip", ".gzip" });
    allMIME.insert({ "multipart/x-gzip", ".gzip" });
    allMIME.insert({ "text/plain", ".h" });
    allMIME.insert({ "text/x-h", ".h" });
    allMIME.insert({ "application/x-hdf", ".hdf" });
    allMIME.insert({ "application/x-helpfile", ".help" });
    allMIME.insert({ "application/vnd.hp-hpgl", ".hgl" });
    allMIME.insert({ "text/plain", ".hh" });
    allMIME.insert({ "text/x-h", ".hh" });
    allMIME.insert({ "text/x-script", ".hlb" });
    allMIME.insert({ "application/hlp", ".hlp" });
    allMIME.insert({ "application/x-helpfile", ".hlp" });
    allMIME.insert({ "application/x-winhelp", ".hlp" });
    allMIME.insert({ "application/vnd.hp-hpgl", ".hpg" });
    allMIME.insert({ "application/vnd.hp-hpgl", ".hpgl" });
    allMIME.insert({ "application/binhex", ".hqx" });
    allMIME.insert({ "application/binhex4", ".hqx" });
    allMIME.insert({ "application/mac-binhex", ".hqx" });
    allMIME.insert({ "application/mac-binhex40", ".hqx" });
    allMIME.insert({ "application/x-binhex40", ".hqx" });
    allMIME.insert({ "application/x-mac-binhex40", ".hqx" });
    allMIME.insert({ "application/hta", ".hta" });
    allMIME.insert({ "text/x-component", ".htc" });
    allMIME.insert({ "text/html", ".htm" });
    allMIME.insert({ "text/html", ".html" });
    allMIME.insert({ "text/webviewhtml", ".htt" });
    allMIME.insert({ "x-conference/x-cooltalk", ".ice" });
    allMIME.insert({ "image/x-icon", ".ico" });
    allMIME.insert({ "text/calendar", ".ics" });
    allMIME.insert({ "text/plain", ".idc" });
    allMIME.insert({ "image/ief", ".ief" });
    allMIME.insert({ "image/ief", ".iefs" });
    allMIME.insert({ "application/iges", ".iges" });
    allMIME.insert({ "model/iges", ".iges" });
    allMIME.insert({ "application/iges", ".igs" });
    allMIME.insert({ "model/iges", ".igs" });
    allMIME.insert({ "application/x-ima", ".ima" });
    allMIME.insert({ "application/x-httpd-imap", ".imap" });
    allMIME.insert({ "application/inf", ".inf" });
    allMIME.insert({ "application/x-internett-signup", ".ins" });
    allMIME.insert({ "application/x-ip2", ".ip" });
    allMIME.insert({ "video/x-isvideo", ".isu" });
    allMIME.insert({ "audio/it", ".it" });
    allMIME.insert({ "application/x-inventor", ".iv" });
    allMIME.insert({ "i-world/i-vrml", ".ivr" });
    allMIME.insert({ "application/x-livescreen", ".ivy" });
    allMIME.insert({ "audio/x-jam", ".jam" });
    allMIME.insert({ "text/plain", ".jav" });
    allMIME.insert({ "text/x-java-source", ".jav" });
    allMIME.insert({ "text/plain", ".java" });
    allMIME.insert({ "text/x-java-source", ".java" });
    allMIME.insert({ "application/x-java-commerce", ".jcm" });
    allMIME.insert({ "image/jpeg", ".jfif" });
    allMIME.insert({ "image/pjpeg", ".jfif" });
    allMIME.insert({ "image/jpeg", ".jfif-tbnl" });
    allMIME.insert({ "image/jpeg", ".jpe" });
    allMIME.insert({ "image/pjpeg", ".jpe" });
    allMIME.insert({ "image/jpeg", ".jpeg" });
    allMIME.insert({ "image/pjpeg", ".jpeg" });
    allMIME.insert({ "image/jpeg", ".jpg" });
    allMIME.insert({ "image/pjpeg", ".jpg" });
    allMIME.insert({ "image/x-jps", ".jps" });
    allMIME.insert({ "application/x-javascript", ".js" });
    allMIME.insert({ "application/javascript", ".js" });
    allMIME.insert({ "application/ecmascript", ".js" });
    allMIME.insert({ "text/javascript", ".js" });
    allMIME.insert({ "text/ecmascript", ".js" });
    allMIME.insert({ "application/json", ".json" });
    allMIME.insert({ "image/jutvision", ".jut" });
    allMIME.insert({ "audio/midi", ".kar" });
    allMIME.insert({ "music/x-karaoke", ".kar" });
    allMIME.insert({ "application/x-ksh", ".ksh" });
    allMIME.insert({ "text/x-script.ksh", ".ksh" });
    allMIME.insert({ "audio/nspaudio", ".la" });
    allMIME.insert({ "audio/x-nspaudio", ".la" });
    allMIME.insert({ "audio/x-liveaudio", ".lam" });
    allMIME.insert({ "application/x-latex", ".latex" });
    allMIME.insert({ "application/lha", ".lha" });
    allMIME.insert({ "application/octet-stream", ".lha" });
    allMIME.insert({ "application/x-lha", ".lha" });
    allMIME.insert({ "application/octet-stream", ".lhx" });
    allMIME.insert({ "text/plain", ".list" });
    allMIME.insert({ "audio/nspaudio", ".lma" });
    allMIME.insert({ "audio/x-nspaudio", ".lma" });
    allMIME.insert({ "text/plain", ".log" });
    allMIME.insert({ "application/x-lisp", ".lsp" });
    allMIME.insert({ "text/x-script.lisp", ".lsp" });
    allMIME.insert({ "text/plain", ".lst" });
    allMIME.insert({ "text/x-la-asf", ".lsx" });
    allMIME.insert({ "application/x-latex", ".ltx" });
    allMIME.insert({ "application/octet-stream", ".lzh" });
    allMIME.insert({ "application/x-lzh", ".lzh" });
    allMIME.insert({ "application/lzx", ".lzx" });
    allMIME.insert({ "application/octet-stream", ".lzx" });
    allMIME.insert({ "application/x-lzx", ".lzx" });
    allMIME.insert({ "text/plain", ".m" });
    allMIME.insert({ "text/x-m", ".m" });
    allMIME.insert({ "video/mpeg", ".m1v" });
    allMIME.insert({ "audio/mpeg", ".m2a" });
    allMIME.insert({ "video/mpeg", ".m2v" });
    allMIME.insert({ "audio/x-mpequrl", ".m3u" });
    allMIME.insert({ "application/x-troff-man", ".man" });
    allMIME.insert({ "application/x-navimap", ".map" });
    allMIME.insert({ "text/plain", ".mar" });
    allMIME.insert({ "application/mbedlet", ".mbd" });
    allMIME.insert({ "application/x-magic-cap-package-1.0", ".mc$" });
    allMIME.insert({ "application/mcad", ".mcd" });
    allMIME.insert({ "application/x-mathcad", ".mcd" });
    allMIME.insert({ "image/vasa", ".mcf" });
    allMIME.insert({ "text/mcf", ".mcf" });
    allMIME.insert({ "application/netmc", ".mcp" });
    allMIME.insert({ "application/x-troff-me", ".me" });
    allMIME.insert({ "message/rfc822", ".mht" });
    allMIME.insert({ "message/rfc822", ".mhtml" });
    allMIME.insert({ "application/x-midi", ".mid" });
    allMIME.insert({ "audio/midi", ".mid" });
    allMIME.insert({ "audio/x-mid", ".mid" });
    allMIME.insert({ "audio/x-midi", ".mid" });
    allMIME.insert({ "music/crescendo", ".mid" });
    allMIME.insert({ "x-music/x-midi", ".mid" });
    allMIME.insert({ "application/x-midi", ".midi" });
    allMIME.insert({ "audio/midi", ".midi" });
    allMIME.insert({ "audio/x-mid", ".midi" });
    allMIME.insert({ "audio/x-midi", ".midi" });
    allMIME.insert({ "music/crescendo", ".midi" });
    allMIME.insert({ "x-music/x-midi", ".midi" });
    allMIME.insert({ "application/x-frame", ".mif" });
    allMIME.insert({ "application/x-mif", ".mif" });
    allMIME.insert({ "message/rfc822", ".mime" });
    allMIME.insert({ "www/mime", ".mime" });
    allMIME.insert({ "audio/x-vnd.audioexplosion.mjuicemediafile", ".mjf" });
    allMIME.insert({ "video/x-motion-jpeg", ".mjpg" });
    allMIME.insert({ "audio/x-matroska", ".mka" });
    allMIME.insert({ "video/x-matroska", ".mkv" });
    allMIME.insert({ "application/base64", ".mm" });
    allMIME.insert({ "application/x-meme", ".mm" });
    allMIME.insert({ "application/base64", ".mme" });
    allMIME.insert({ "audio/mod", ".mod" });
    allMIME.insert({ "audio/x-mod", ".mod" });
    allMIME.insert({ "video/quicktime", ".moov" });
    allMIME.insert({ "video/quicktime", ".mov" });
    allMIME.insert({ "video/x-sgi-movie", ".movie" });
    allMIME.insert({ "audio/mpeg", ".mp2" });
    allMIME.insert({ "audio/x-mpeg", ".mp2" });
    allMIME.insert({ "video/mpeg", ".mp2" });
    allMIME.insert({ "video/x-mpeg", ".mp2" });
    allMIME.insert({ "video/x-mpeq2a", ".mp2" });
    allMIME.insert({ "audio/mpeg3", ".mp3" });
    allMIME.insert({ "audio/x-mpeg-3", ".mp3" });
    allMIME.insert({ "video/mpeg", ".mp3" });
    allMIME.insert({ "video/x-mpeg", ".mp3" });
    allMIME.insert({ "video/mp4", ".mp4" });
    allMIME.insert({ "audio/mpeg", ".mpa" });
    allMIME.insert({ "video/mpeg", ".mpa" });
    allMIME.insert({ "application/x-project", ".mpc" });
    allMIME.insert({ "video/mpeg", ".mpe" });
    allMIME.insert({ "video/mpeg", ".mpeg" });
    allMIME.insert({ "audio/mpeg", ".mpg" });
    allMIME.insert({ "video/mpeg", ".mpg" });
    allMIME.insert({ "audio/mpeg", ".mpga" });
    allMIME.insert({ "application/vnd.ms-project", ".mpp" });
    allMIME.insert({ "application/x-project", ".mpt" });
    allMIME.insert({ "application/x-project", ".mpv" });
    allMIME.insert({ "application/x-project", ".mpx" });
    allMIME.insert({ "application/marc", ".mrc" });
    allMIME.insert({ "application/x-troff-ms", ".ms" });
    allMIME.insert({ "video/x-sgi-movie", ".mv" });
    allMIME.insert({ "audio/make", ".my" });
    allMIME.insert({ "application/x-vnd.audioexplosion.mzz", ".mzz" });
    allMIME.insert({ "image/naplps", ".nap" });
    allMIME.insert({ "image/naplps", ".naplps" });
    allMIME.insert({ "application/x-netcdf", ".nc" });
    allMIME.insert({ "application/vnd.nokia.configuration-message", ".ncm" });
    allMIME.insert({ "image/x-niff", ".nif" });
    allMIME.insert({ "image/x-niff", ".niff" });
    allMIME.insert({ "application/x-mix-transfer", ".nix" });
    allMIME.insert({ "application/x-conference", ".nsc" });
    allMIME.insert({ "application/x-navidoc", ".nvd" });
    allMIME.insert({ "application/octet-stream", ".o" });
    allMIME.insert({ "application/oda", ".oda" });
    allMIME.insert({ "audio/ogg", ".ogg" });
    allMIME.insert({ "video/ogg", ".ogg" });
    allMIME.insert({ "application/x-omc", ".omc" });
    allMIME.insert({ "application/x-omcdatamaker", ".omcd" });
    allMIME.insert({ "application/x-omcregerator", ".omcr" });
    allMIME.insert({ "font/otf", ".otf" });
    allMIME.insert({ "text/x-pascal", ".p" });
    allMIME.insert({ "application/pkcs10", ".p10" });
    allMIME.insert({ "application/x-pkcs10", ".p10" });
    allMIME.insert({ "application/pkcs-12", ".p12" });
    allMIME.insert({ "application/x-pkcs12", ".p12" });
    allMIME.insert({ "application/x-pkcs7-signature", ".p7a" });
    allMIME.insert({ "application/pkcs7-mime", ".p7c" });
    allMIME.insert({ "application/x-pkcs7-mime", ".p7c" });
    allMIME.insert({ "application/pkcs7-mime", ".p7m" });
    allMIME.insert({ "application/x-pkcs7-mime", ".p7m" });
    allMIME.insert({ "application/x-pkcs7-certreqresp", ".p7r" });
    allMIME.insert({ "application/pkcs7-signature", ".p7s" });
    allMIME.insert({ "application/pro_eng", ".part" });
    allMIME.insert({ "text/pascal", ".pas" });
    allMIME.insert({ "image/x-portable-bitmap", ".pbm" });
    allMIME.insert({ "application/vnd.hp-pcl", ".pcl" });
    allMIME.insert({ "application/x-pcl", ".pcl" });
    allMIME.insert({ "image/x-pict", ".pct" });
    allMIME.insert({ "image/x-pcx", ".pcx" });
    allMIME.insert({ "chemical/x-pdb", ".pdb" });
    allMIME.insert({ "application/pdf", ".pdf" });
    allMIME.insert({ "audio/make", ".pfunk" });
    allMIME.insert({ "audio/make.my.funk", ".pfunk" });
    allMIME.insert({ "image/x-portable-graymap", ".pgm" });
    allMIME.insert({ "image/x-portable-greymap", ".pgm" });
    allMIME.insert({ "image/pict", ".pic" });
    allMIME.insert({ "image/pict", ".pict" });
    allMIME.insert({ "application/x-newton-compatible-pkg", ".pkg" });
    allMIME.insert({ "application/vnd.ms-pki.pko", ".pko" });
    allMIME.insert({ "text/plain", ".pl" });
    allMIME.insert({ "text/x-script.perl", ".pl" });
    allMIME.insert({ "application/x-pixclscript", ".plx" });
    allMIME.insert({ "image/x-xpixmap", ".pm" });
    allMIME.insert({ "text/x-script.perl-module", ".pm" });
    allMIME.insert({ "application/x-pagemaker", ".pm4" });
    allMIME.insert({ "application/x-pagemaker", ".pm5" });
    allMIME.insert({ "image/png", ".png" });
    allMIME.insert({ "application/x-portable-anymap", ".pnm" });
    allMIME.insert({ "image/x-portable-anymap", ".pnm" });
    allMIME.insert({ "application/mspowerpoint", ".pot" });
    allMIME.insert({ "application/vnd.ms-powerpoint", ".pot" });
    allMIME.insert({ "model/x-pov", ".pov" });
    allMIME.insert({ "application/vnd.ms-powerpoint", ".ppa" });
    allMIME.insert({ "image/x-portable-pixmap", ".ppm" });
    allMIME.insert({ "application/mspowerpoint", ".pps" });
    allMIME.insert({ "application/vnd.ms-powerpoint", ".pps" });
    allMIME.insert({ "application/mspowerpoint", ".ppt" });
    allMIME.insert({ "application/powerpoint", ".ppt" });
    allMIME.insert({ "application/vnd.ms-powerpoint", ".ppt" });
    allMIME.insert({ "application/x-mspowerpoint", ".ppt" });
    allMIME.insert({ "application/vnd.openxmlformats-officedocument.presentationml.presentation", ".pptx" });
    allMIME.insert({ "application/mspowerpoint", ".ppz" });
    allMIME.insert({ "application/x-freelance", ".pre" });
    allMIME.insert({ "application/pro_eng", ".prt" });
    allMIME.insert({ "application/postscript", ".ps" });
    allMIME.insert({ "application/octet-stream", ".psd" });
    allMIME.insert({ "paleovu/x-pv", ".pvu" });
    allMIME.insert({ "application/vnd.ms-powerpoint", ".pwz" });
    allMIME.insert({ "text/x-script.phyton", ".py" });
    allMIME.insert({ "application/x-bytecode.python", ".pyc" });
    allMIME.insert({ "audio/vnd.qcelp", ".qcp" });
    allMIME.insert({ "x-world/x-3dmf", ".qd3" });
    allMIME.insert({ "x-world/x-3dmf", ".qd3d" });
    allMIME.insert({ "image/x-quicktime", ".qif" });
    allMIME.insert({ "video/quicktime", ".qt" });
    allMIME.insert({ "video/x-qtc", ".qtc" });
    allMIME.insert({ "image/x-quicktime", ".qti" });
    allMIME.insert({ "image/x-quicktime", ".qtif" });
    allMIME.insert({ "audio/x-pn-realaudio", ".ra" });
    allMIME.insert({ "audio/x-pn-realaudio-plugin", ".ra" });
    allMIME.insert({ "audio/x-realaudio", ".ra" });
    allMIME.insert({ "audio/x-pn-realaudio", ".ram" });
    allMIME.insert({ "application/x-cmu-raster", ".ras" });
    allMIME.insert({ "image/cmu-raster", ".ras" });
    allMIME.insert({ "image/x-cmu-raster", ".ras" });
    allMIME.insert({ "image/cmu-raster", ".rast" });
    allMIME.insert({ "application/vnd.rar", ".rar" });
    allMIME.insert({ "text/x-script.rexx", ".rexx" });
    allMIME.insert({ "image/vnd.rn-realflash", ".rf" });
    allMIME.insert({ "image/x-rgb", ".rgb" });
    allMIME.insert({ "application/vnd.rn-realmedia", ".rm" });
    allMIME.insert({ "audio/x-pn-realaudio", ".rm" });
    allMIME.insert({ "audio/mid", ".rmi" });
    allMIME.insert({ "audio/x-pn-realaudio", ".rmm" });
    allMIME.insert({ "audio/x-pn-realaudio", ".rmp" });
    allMIME.insert({ "audio/x-pn-realaudio-plugin", ".rmp" });
    allMIME.insert({ "application/ringing-tones", ".rng" });
    allMIME.insert({ "application/vnd.nokia.ringing-tone", ".rng" });
    allMIME.insert({ "application/vnd.rn-realplayer", ".rnx" });
    allMIME.insert({ "application/x-troff", ".roff" });
    allMIME.insert({ "image/vnd.rn-realpix", ".rp" });
    allMIME.insert({ "audio/x-pn-realaudio-plugin", ".rpm" });
    allMIME.insert({ "text/richtext", ".rt" });
    allMIME.insert({ "text/vnd.rn-realtext", ".rt" });
    allMIME.insert({ "application/rtf", ".rtf" });
    allMIME.insert({ "application/x-rtf", ".rtf" });
    allMIME.insert({ "text/richtext", ".rtf" });
    allMIME.insert({ "application/rtf", ".rtx" });
    allMIME.insert({ "text/richtext", ".rtx" });
    allMIME.insert({ "video/vnd.rn-realvideo", ".rv" });
    allMIME.insert({ "text/x-asm", ".s" });
    allMIME.insert({ "audio/s3m", ".s3m" });
    allMIME.insert({ "application/octet-stream", ".saveme" });
    allMIME.insert({ "application/x-tbook", ".sbk" });
    allMIME.insert({ "application/x-lotusscreencam", ".scm" });
    allMIME.insert({ "text/x-script.guile", ".scm" });
    allMIME.insert({ "text/x-script.scheme", ".scm" });
    allMIME.insert({ "video/x-scm", ".scm" });
    allMIME.insert({ "text/plain", ".sdml" });
    allMIME.insert({ "application/sdp", ".sdp" });
    allMIME.insert({ "application/x-sdp", ".sdp" });
    allMIME.insert({ "application/sounder", ".sdr" });
    allMIME.insert({ "application/sea", ".sea" });
    allMIME.insert({ "application/x-sea", ".sea" });
    allMIME.insert({ "application/set", ".set" });
    allMIME.insert({ "text/sgml", ".sgm" });
    allMIME.insert({ "text/x-sgml", ".sgm" });
    allMIME.insert({ "text/sgml", ".sgml" });
    allMIME.insert({ "text/x-sgml", ".sgml" });
    allMIME.insert({ "application/x-bsh", ".sh" });
    allMIME.insert({ "application/x-sh", ".sh" });
    allMIME.insert({ "application/x-shar", ".sh" });
    allMIME.insert({ "text/x-script.sh", ".sh" });
    allMIME.insert({ "application/x-bsh", ".shar" });
    allMIME.insert({ "application/x-shar", ".shar" });
    allMIME.insert({ "text/html", ".shtml" });
    allMIME.insert({ "text/x-server-parsed-html", ".shtml" });
    allMIME.insert({ "audio/x-psid", ".sid" });
    allMIME.insert({ "application/x-sit", ".sit" });
    allMIME.insert({ "application/x-stuffit", ".sit" });
    allMIME.insert({ "application/x-koan", ".skd" });
    allMIME.insert({ "application/x-koan", ".skm" });
    allMIME.insert({ "application/x-koan", ".skp" });
    allMIME.insert({ "application/x-koan", ".skt" });
    allMIME.insert({ "application/x-seelogo", ".sl" });
    allMIME.insert({ "application/smil", ".smi" });
    allMIME.insert({ "application/smil", ".smil" });
    allMIME.insert({ "audio/basic", ".snd" });
    allMIME.insert({ "audio/x-adpcm", ".snd" });
    allMIME.insert({ "application/solids", ".sol" });
    allMIME.insert({ "application/x-pkcs7-certificates", ".spc" });
    allMIME.insert({ "text/x-speech", ".spc" });
    allMIME.insert({ "application/futuresplash", ".spl" });
    allMIME.insert({ "application/x-sprite", ".spr" });
    allMIME.insert({ "application/x-sprite", ".sprite" });
    allMIME.insert({ "application/x-wais-source", ".src" });
    allMIME.insert({ "text/x-server-parsed-html", ".ssi" });
    allMIME.insert({ "application/streamingmedia", ".ssm" });
    allMIME.insert({ "application/vnd.ms-pki.certstore", ".sst" });
    allMIME.insert({ "application/step", ".step" });
    allMIME.insert({ "application/sla", ".stl" });
    allMIME.insert({ "application/vnd.ms-pki.stl", ".stl" });
    allMIME.insert({ "application/x-navistyle", ".stl" });
    allMIME.insert({ "application/step", ".stp" });
    allMIME.insert({ "application/x-sv4cpio", ".sv4cpio" });
    allMIME.insert({ "application/x-sv4crc", ".sv4crc" });
    allMIME.insert({ "image/vnd.dwg", ".svf" });
    allMIME.insert({ "image/x-dwg", ".svf" });
    allMIME.insert({ "image/svg+xml", ".svg" });
    allMIME.insert({ "application/x-world", ".svr" });
    allMIME.insert({ "x-world/x-svr", ".svr" });
    allMIME.insert({ "application/x-shockwave-flash", ".swf" });
    allMIME.insert({ "application/x-troff", ".t" });
    allMIME.insert({ "text/x-speech", ".talk" });
    allMIME.insert({ "application/x-tar", ".tar" });
    allMIME.insert({ "application/toolbook", ".tbk" });
    allMIME.insert({ "application/x-tbook", ".tbk" });
    allMIME.insert({ "application/x-tcl", ".tcl" });
    allMIME.insert({ "text/x-script.tcl", ".tcl" });
    allMIME.insert({ "text/x-script.tcsh", ".tcsh" });
    allMIME.insert({ "application/x-tex", ".tex" });
    allMIME.insert({ "application/x-texinfo", ".texi" });
    allMIME.insert({ "application/x-texinfo", ".texinfo" });
    allMIME.insert({ "application/plain", ".text" });
    allMIME.insert({ "text/plain", ".text" });
    allMIME.insert({ "application/gnutar", ".tgz" });
    allMIME.insert({ "application/x-compressed", ".tgz" });
    allMIME.insert({ "image/tiff", ".tif" });
    allMIME.insert({ "image/x-tiff", ".tif" });
    allMIME.insert({ "image/tiff", ".tiff" });
    allMIME.insert({ "image/x-tiff", ".tiff" });
    allMIME.insert({ "application/x-troff", ".tr" });
    allMIME.insert({ "video/mp2t", ".ts" });
    allMIME.insert({ "audio/tsp-audio", ".tsi" });
    allMIME.insert({ "application/dsptype", ".tsp" });
    allMIME.insert({ "audio/tsplayer", ".tsp" });
    allMIME.insert({ "text/tab-separated-values", ".tsv" });
    allMIME.insert({ "image/florian", ".turbot" });
    allMIME.insert({ "text/plain", ".txt" });
    allMIME.insert({ "text/x-uil", ".uil" });
    allMIME.insert({ "text/uri-list", ".uni" });
    allMIME.insert({ "text/uri-list", ".unis" });
    allMIME.insert({ "application/i-deas", ".unv" });
    allMIME.insert({ "text/uri-list", ".uri" });
    allMIME.insert({ "text/uri-list", ".uris" });
    allMIME.insert({ "application/x-ustar", ".ustar" });
    allMIME.insert({ "multipart/x-ustar", ".ustar" });
    allMIME.insert({ "application/octet-stream", ".uu" });
    allMIME.insert({ "text/x-uuencode", ".uu" });
    allMIME.insert({ "text/x-uuencode", ".uue" });
    allMIME.insert({ "application/x-cdlink", ".vcd" });
    allMIME.insert({ "text/x-vcalendar", ".vcs" });
    allMIME.insert({ "application/vda", ".vda" });
    allMIME.insert({ "video/vdo", ".vdo" });
    allMIME.insert({ "application/groupwise", ".vew" });
    allMIME.insert({ "video/vivo", ".viv" });
    allMIME.insert({ "video/vnd.vivo", ".viv" });
    allMIME.insert({ "video/vivo", ".vivo" });
    allMIME.insert({ "video/vnd.vivo", ".vivo" });
    allMIME.insert({ "application/vocaltec-media-desc", ".vmd" });
    allMIME.insert({ "application/vocaltec-media-file", ".vmf" });
    allMIME.insert({ "audio/voc", ".voc" });
    allMIME.insert({ "audio/x-voc", ".voc" });
    allMIME.insert({ "video/vosaic", ".vos" });
    allMIME.insert({ "audio/voxware", ".vox" });
    allMIME.insert({ "audio/x-twinvq-plugin", ".vqe" });
    allMIME.insert({ "audio/x-twinvq", ".vqf" });
    allMIME.insert({ "audio/x-twinvq-plugin", ".vql" });
    allMIME.insert({ "application/x-vrml", ".vrml" });
    allMIME.insert({ "model/vrml", ".vrml" });
    allMIME.insert({ "x-world/x-vrml", ".vrml" });
    allMIME.insert({ "x-world/x-vrt", ".vrt" });
    allMIME.insert({ "application/x-visio", ".vsd" });
    allMIME.insert({ "application/x-visio", ".vst" });
    allMIME.insert({ "application/x-visio", ".vsw" });
    allMIME.insert({ "application/wordperfect6.0", ".w60" });
    allMIME.insert({ "application/wordperfect6.1", ".w61" });
    allMIME.insert({ "application/msword", ".w6w" });
    allMIME.insert({ "audio/wav", ".wav" });
    allMIME.insert({ "audio/x-wav", ".wav" });
    allMIME.insert({ "application/x-qpro", ".wb1" });
    allMIME.insert({ "image/vnd.wap.wbmp", ".wbmp" });
    allMIME.insert({ "application/vnd.xara", ".web" });
    allMIME.insert({ "video/webm", ".webm" });
    allMIME.insert({ "image/webp", ".webp" });
    allMIME.insert({ "application/msword", ".wiz" });
    allMIME.insert({ "application/x-123", ".wk1" });
    allMIME.insert({ "windows/metafile", ".wmf" });
    allMIME.insert({ "text/vnd.wap.wml", ".wml" });
    allMIME.insert({ "application/vnd.wap.wmlc", ".wmlc" });
    allMIME.insert({ "text/vnd.wap.wmlscript", ".wmls" });
    allMIME.insert({ "application/vnd.wap.wmlscriptc", ".wmlsc" });
    allMIME.insert({ "application/msword", ".word" });
    allMIME.insert({ "font/woff", ".woff" });
    allMIME.insert({ "font/woff2", ".woff2" });
    allMIME.insert({ "application/wordperfect", ".wp" });
    allMIME.insert({ "application/wordperfect", ".wp5" });
    allMIME.insert({ "application/wordperfect6.0", ".wp5" });
    allMIME.insert({ "application/wordperfect", ".wp6" });
    allMIME.insert({ "application/wordperfect", ".wpd" });
    allMIME.insert({ "application/x-wpwin", ".wpd" });
    allMIME.insert({ "application/x-lotus", ".wq1" });
    allMIME.insert({ "application/mswrite", ".wri" });
    allMIME.insert({ "application/x-wri", ".wri" });
    allMIME.insert({ "application/x-world", ".wrl" });
    allMIME.insert({ "model/vrml", ".wrl" });
    allMIME.insert({ "x-world/x-vrml", ".wrl" });
    allMIME.insert({ "model/vrml", ".wrz" });
    allMIME.insert({ "x-world/x-vrml", ".wrz" });
    allMIME.insert({ "text/scriplet", ".wsc" });
    allMIME.insert({ "application/x-wais-source", ".wsrc" });
    allMIME.insert({ "application/x-wintalk", ".wtk" });
    allMIME.insert({ "image/x-xbitmap", ".xbm" });
    allMIME.insert({ "image/x-xbm", ".xbm" });
    allMIME.insert({ "image/xbm", ".xbm" });
    allMIME.insert({ "video/x-amt-demorun", ".xdr" });
    allMIME.insert({ "xgl/drawing", ".xgz" });
    allMIME.insert({ "image/vnd.xiff", ".xif" });
    allMIME.insert({ "application/excel", ".xl" });
    allMIME.insert({ "application/excel", ".xla" });
    allMIME.insert({ "application/x-excel", ".xla" });
    allMIME.insert({ "application/x-msexcel", ".xla" });
    allMIME.insert({ "application/excel", ".xlb" });
    allMIME.insert({ "application/vnd.ms-excel", ".xlb" });
    allMIME.insert({ "application/x-excel", ".xlb" });
    allMIME.insert({ "application/excel", ".xlc" });
    allMIME.insert({ "application/vnd.ms-excel", ".xlc" });
    allMIME.insert({ "application/x-excel", ".xlc" });
    allMIME.insert({ "application/excel", ".xld" });
    allMIME.insert({ "application/x-excel", ".xld" });
    allMIME.insert({ "application/excel", ".xlk" });
    allMIME.insert({ "application/x-excel", ".xlk" });
    allMIME.insert({ "application/excel", ".xll" });
    allMIME.insert({ "application/vnd.ms-excel", ".xll" });
    allMIME.insert({ "application/x-excel", ".xll" });
    allMIME.insert({ "application/excel", ".xlm" });
    allMIME.insert({ "application/vnd.ms-excel", ".xlm" });
    allMIME.insert({ "application/x-excel", ".xlm" });
    allMIME.insert({ "application/excel", ".xls" });
    allMIME.insert({ "application/vnd.ms-excel", ".xls" });
    allMIME.insert({ "application/x-excel", ".xls" });
    allMIME.insert({ "application/x-msexcel", ".xls" });
    allMIME.insert({ "application/excel", ".xlt" });
    allMIME.insert({ "application/x-excel", ".xlt" });
    allMIME.insert({ "application/excel", ".xlv" });
    allMIME.insert({ "application/x-excel", ".xlv" });
    allMIME.insert({ "application/excel", ".xlw" });
    allMIME.insert({ "application/vnd.ms-excel", ".xlw" });
    allMIME.insert({ "application/x-excel", ".xlw" });
    allMIME.insert({ "application/x-msexcel", ".xlw" });
    allMIME.insert({ "audio/xm", ".xm" });
    allMIME.insert({ "application/xml", ".xml" });
    allMIME.insert({ "text/xml", ".xml" });
    allMIME.insert({ "xgl/movie", ".xmz" });
    allMIME.insert({ "application/x-vnd.ls-xpix", ".xpix" });
    allMIME.insert({ "image/x-xpixmap", ".xpm" });
    allMIME.insert({ "image/xpm", ".xpm" });
    allMIME.insert({ "image/png", ".x-png" });
    allMIME.insert({ "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", ".xlsx" });
    allMIME.insert({ "video/x-amt-showrun", ".xsr" });
    allMIME.insert({ "image/x-xwd", ".xwd" });
    allMIME.insert({ "image/x-xwindowdump", ".xwd" });
    allMIME.insert({ "chemical/x-pdb", ".xyz" });
    allMIME.insert({ "application/x-yaml", ".yaml" });
    allMIME.insert({ "application/x-yaml", ".yml" });
    allMIME.insert({ "application/x-compress", ".z" });
    allMIME.insert({ "application/x-compressed", ".z" });
    allMIME.insert({ "application/x-compressed", ".zip" });
    allMIME.insert({ "application/x-zip-compressed", ".zip" });
    allMIME.insert({ "application/zip", ".zip" });
    allMIME.insert({ "multipart/x-zip", ".zip" });
    allMIME.insert({ "application/octet-stream", ".zoo" });
    allMIME.insert({ "text/x-script.zsh", ".zsh" });

}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file
